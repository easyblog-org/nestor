<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.easyblog.titan.nestor.dao.custom.mapper.MyMessageConfigMapper">
    <resultMap id="BaseResultMap" type="top.easyblog.titan.nestor.bean.MessageConfigBean">
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="deleted" jdbcType="BIT" property="deleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="template_value_config_type" jdbcType="TINYINT" property="templateValueConfigType"/>
        <result column="expression" jdbcType="VARCHAR" property="expression"/>
        <result column="url" jdbcType="VARCHAR" property="url"/>
    </resultMap>


    <sql id="BASE_QUERY_COL">
        mc.code,mc.type,mc.name.mc.deleted,mc.create_time,mc.update_time,
        tvc.type as template_value_config_type,  tvc.expression, tvc.url
    </sql>

    <select id="selectListByRequest" resultMap="BaseResultMap" parameterType="top.easyblog.titan.nestor.request.QueryMessageConfigsRequest">
        select
        <include refid="BASE_QUERY_COL"/>
        from message_config mc left join template_value_config tvc on tvc.id = mc.template_value_config_id
        <include refid="message_config_where_condition"/>
    </select>

    <select id="countByRequest" resultType="long" parameterType="top.easyblog.titan.nestor.request.QueryMessageConfigsRequest">
        select count(*)
        from message_config mc left join template_value_config tvc on tvc.id = mc.template_value_config_id
        <include refid="message_config_where_condition"/>
    </select>

    <sql id="message_config_where_condition">
        <where>
            <if test="codes!=null and codes.size()>0">
                mc.code in
                <foreach collection="request.codes" item="code" open="(" separator="," close=")">
                    #{code}
                </foreach>
            </if>
            <if test="types!=null and types.size()>0">
                mc.type in
                <foreach collection="request.types" item="type" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
            <if test="deleted!=null">
                  mc.deleted=#{request.deleted}
            </if>
        </where>
    </sql>


</mapper>